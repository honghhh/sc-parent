<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sanxin.common.dao.DatasourceMapper" >
  <resultMap id="BaseResultMap" type="com.sanxin.common.entity.Datasource" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="datakey" property="datakey" jdbcType="VARCHAR" />
    <result column="datadriver" property="datadriver" jdbcType="VARCHAR" />
    <result column="dataurl" property="dataurl" jdbcType="VARCHAR" />
    <result column="datauser" property="datauser" jdbcType="VARCHAR" />
    <result column="datapwd" property="datapwd" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, datakey, datadriver, dataurl, datauser, datapwd
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sanxin.common.entity.DatasourceExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from datasource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from datasource
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from datasource
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sanxin.common.entity.DatasourceExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from datasource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sanxin.common.entity.Datasource" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into datasource (datakey, datadriver, dataurl, 
      datauser, datapwd)
    values (#{datakey,jdbcType=VARCHAR}, #{datadriver,jdbcType=VARCHAR}, #{dataurl,jdbcType=VARCHAR}, 
      #{datauser,jdbcType=VARCHAR}, #{datapwd,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sanxin.common.entity.Datasource" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into datasource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="datakey != null" >
        datakey,
      </if>
      <if test="datadriver != null" >
        datadriver,
      </if>
      <if test="dataurl != null" >
        dataurl,
      </if>
      <if test="datauser != null" >
        datauser,
      </if>
      <if test="datapwd != null" >
        datapwd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="datakey != null" >
        #{datakey,jdbcType=VARCHAR},
      </if>
      <if test="datadriver != null" >
        #{datadriver,jdbcType=VARCHAR},
      </if>
      <if test="dataurl != null" >
        #{dataurl,jdbcType=VARCHAR},
      </if>
      <if test="datauser != null" >
        #{datauser,jdbcType=VARCHAR},
      </if>
      <if test="datapwd != null" >
        #{datapwd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sanxin.common.entity.DatasourceExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from datasource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update datasource
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.datakey != null" >
        datakey = #{record.datakey,jdbcType=VARCHAR},
      </if>
      <if test="record.datadriver != null" >
        datadriver = #{record.datadriver,jdbcType=VARCHAR},
      </if>
      <if test="record.dataurl != null" >
        dataurl = #{record.dataurl,jdbcType=VARCHAR},
      </if>
      <if test="record.datauser != null" >
        datauser = #{record.datauser,jdbcType=VARCHAR},
      </if>
      <if test="record.datapwd != null" >
        datapwd = #{record.datapwd,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update datasource
    set id = #{record.id,jdbcType=INTEGER},
      datakey = #{record.datakey,jdbcType=VARCHAR},
      datadriver = #{record.datadriver,jdbcType=VARCHAR},
      dataurl = #{record.dataurl,jdbcType=VARCHAR},
      datauser = #{record.datauser,jdbcType=VARCHAR},
      datapwd = #{record.datapwd,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanxin.common.entity.Datasource" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update datasource
    <set >
      <if test="datakey != null" >
        datakey = #{datakey,jdbcType=VARCHAR},
      </if>
      <if test="datadriver != null" >
        datadriver = #{datadriver,jdbcType=VARCHAR},
      </if>
      <if test="dataurl != null" >
        dataurl = #{dataurl,jdbcType=VARCHAR},
      </if>
      <if test="datauser != null" >
        datauser = #{datauser,jdbcType=VARCHAR},
      </if>
      <if test="datapwd != null" >
        datapwd = #{datapwd,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanxin.common.entity.Datasource" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update datasource
    set datakey = #{datakey,jdbcType=VARCHAR},
      datadriver = #{datadriver,jdbcType=VARCHAR},
      dataurl = #{dataurl,jdbcType=VARCHAR},
      datauser = #{datauser,jdbcType=VARCHAR},
      datapwd = #{datapwd,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>